{"remainingRequest":"/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/node_modules/babel-loader/lib/index.js!/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/src/components/form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/src/components/form.vue","mtime":1584957023812},{"path":"/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/node_modules/cache-loader/dist/cjs.js","mtime":1584957116395},{"path":"/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/node_modules/babel-loader/lib/index.js","mtime":1584957116386},{"path":"/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/node_modules/cache-loader/dist/cjs.js","mtime":1584957116395},{"path":"/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/node_modules/vue-loader/lib/index.js","mtime":1584957143359}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBkZWJvdW5jZSBmcm9tICdsb2Rhc2gvZGVib3VuY2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IFtdLAogICAgICBzZWxlY3RlZDogbnVsbCwKICAgICAgaXNGZXRjaGluZzogZmFsc2UsCiAgICAgIHNvcnRLZXk6ICdBU1NPQ0lBVElPTicsCiAgICAgIHNvcnRMaXN0OiBbJ0FTU09DSUFUSU9OJywgJ09USEVSMScsICdPVEhFUjInXSwKICAgICAgcGVyUGFnZTogMTAsCiAgICAgIHBlclBhZ2VMaXN0OiBbMTAsIDIwLCAzMF0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBZb3UgaGF2ZSB0byBpbnN0YWxsIGFuZCBpbXBvcnQgZGVib3VuY2UgdG8gdXNlIGl0LAogICAgLy8gaXQncyBub3QgbWFuZGF0b3J5IHRob3VnaC4KICAgIGdldEFzeW5jRGF0YTogZGVib3VuY2UoZnVuY3Rpb24gKG5hbWUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmICghbmFtZS5sZW5ndGgpIHsKICAgICAgICB0aGlzLmRhdGEgPSBbXTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuaXNGZXRjaGluZyA9IHRydWU7CiAgICAgIHRoaXMuJGh0dHAuZ2V0KCJodHRwczovL2FwaS50aGVtb3ZpZWRiLm9yZy8zL3NlYXJjaC9tb3ZpZT9hcGlfa2V5PWJiNmY1MWJlZjA3NDY1NjUzYzNlNTUzZDZhYjE2MWE4JnF1ZXJ5PSIuY29uY2F0KG5hbWUpKS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgdmFyIGRhdGEgPSBfcmVmLmRhdGE7CiAgICAgICAgX3RoaXMuZGF0YSA9IFtdOwogICAgICAgIGRhdGEucmVzdWx0cy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gX3RoaXMuZGF0YS5wdXNoKGl0ZW0pOwogICAgICAgIH0pOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBfdGhpcy5kYXRhID0gW107CiAgICAgICAgdGhyb3cgZXJyb3I7CiAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLmlzRmV0Y2hpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LCA1MDApCiAgfQp9Ow=="},{"version":3,"sources":["form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8KA,OAAA,QAAA,MAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,UAAA,EAAA,KAHA;AAIA,MAAA,OAAA,EAAA,aAJA;AAKA,MAAA,QAAA,EAAA,CACA,aADA,EACA,QADA,EACA,QADA,CALA;AAQA,MAAA,OAAA,EAAA,EARA;AASA,MAAA,WAAA,EAAA,CACA,EADA,EACA,EADA,EACA,EADA;AATA,KAAA;AAaA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA;AACA;AACA,IAAA,YAAA,EAAA,QAAA,CAAA,UAAA,IAAA,EAAA;AAAA;;AACA,UAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA,aAAA,IAAA,GAAA,EAAA;AACA;AACA;;AACA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,GAAA,oGAAA,IAAA,GACA,IADA,CACA,gBAAA;AAAA,YAAA,IAAA,QAAA,IAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,EAAA;AACA,QAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AAAA,SAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,EAAA;AACA,cAAA,KAAA;AACA,OARA,EASA,OATA,CASA,YAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,KAAA;AACA,OAXA;AAYA,KAlBA,EAkBA,GAlBA;AAHA;AAhBA,CAAA","sourcesContent":["<template>\n    <div class=\"search-section\">\n        <section id=\"search\" class=\"content\">\n            <div class=\"field is-horizontal\">\n                <div class=\"field-label is-normal\">\n                    <label class=\"label\">Taxonomy ID</label>\n                </div>\n                <div class=\"field-body\">\n                    <div class=\"field\">\n                        <b-autocomplete\n                                :data=\"data\"\n                                placeholder=\"e.g. Fight Club\"\n                                field=\"title\"\n                                :loading=\"isFetching\"\n                                @typing=\"getAsyncData\"\n                                @select=\"option => selected = option\">\n\n                            <template slot-scope=\"props\">\n                                <div class=\"media\">\n                                    <div class=\"media-left\">\n                                        <img width=\"32\" :src=\"`https://image.tmdb.org/t/p/w500/${props.option.poster_path}`\">\n                                    </div>\n                                    <div class=\"media-content\">\n                                        {{ props.option.title }}\n                                        <br>\n                                        <small>\n                                            Released at {{ props.option.release_date }},\n                                            rated <b>{{ props.option.vote_average }}</b>\n                                        </small>\n                                    </div>\n                                </div>\n                            </template>\n                        </b-autocomplete>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field is-horizontal\">\n                <div class=\"field-label is-normal\">\n                    <label class=\"label\">Keyword</label>\n                </div>\n                <div class=\"field-body\">\n                    <div class=\"field\">\n                        <b-autocomplete\n                                :data=\"data\"\n                                placeholder=\"e.g. Fight Club\"\n                                field=\"title\"\n                                :loading=\"isFetching\"\n                                @typing=\"getAsyncData\"\n                                @select=\"option => selected = option\">\n\n                            <template slot-scope=\"props\">\n                                <div class=\"media\">\n                                    <div class=\"media-left\">\n                                        <img width=\"32\" :src=\"`https://image.tmdb.org/t/p/w500/${props.option.poster_path}`\">\n                                    </div>\n                                    <div class=\"media-content\">\n                                        {{ props.option.title }}\n                                        <br>\n                                        <small>\n                                            Released at {{ props.option.release_date }},\n                                            rated <b>{{ props.option.vote_average }}</b>\n                                        </small>\n                                    </div>\n                                </div>\n                            </template>\n                        </b-autocomplete>\n                    </div>\n                </div>\n            </div>\n            <b-collapse :open=\"false\" position=\"is-bottom\" aria-id=\"contentIdForA11y1\" class=\"search-collapse\">\n                <a slot=\"trigger\" slot-scope=\"props\" aria-controls=\"contentIdForA11y1\" class=\"search-collapse-trigger\">\n                    <b-icon :icon=\"!props.open ? 'menu-down' : 'menu-up'\"></b-icon>\n                    {{ !props.open ? 'All settings' : 'Fewer settings' }}\n                </a>\n                <div>\n                    <div class=\"field is-horizontal\">\n                        <div class=\"field-label is-normal\">\n                            <label class=\"label\">More Settings</label>\n                        </div>\n                        <div class=\"field-body\">\n                            <div class=\"field\">\n                                <b-autocomplete\n                                        :data=\"data\"\n                                        placeholder=\"e.g. Fight Club\"\n                                        field=\"title\"\n                                        :loading=\"isFetching\"\n                                        @typing=\"getAsyncData\"\n                                        @select=\"option => selected = option\">\n\n                                    <template slot-scope=\"props\">\n                                        <div class=\"media\">\n                                            <div class=\"media-left\">\n                                                <img width=\"32\" :src=\"`https://image.tmdb.org/t/p/w500/${props.option.poster_path}`\">\n                                            </div>\n                                            <div class=\"media-content\">\n                                                {{ props.option.title }}\n                                                <br>\n                                                <small>\n                                                    Released at {{ props.option.release_date }},\n                                                    rated <b>{{ props.option.vote_average }}</b>\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </template>\n                                </b-autocomplete>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"field is-horizontal\">\n                        <div class=\"field-label is-normal\">\n                            <label class=\"label\">More Settings</label>\n                        </div>\n                        <div class=\"field-body\">\n                            <div class=\"field\">\n                                <b-autocomplete\n                                        :data=\"data\"\n                                        placeholder=\"e.g. Fight Club\"\n                                        field=\"title\"\n                                        :loading=\"isFetching\"\n                                        @typing=\"getAsyncData\"\n                                        @select=\"option => selected = option\">\n\n                                    <template slot-scope=\"props\">\n                                        <div class=\"media\">\n                                            <div class=\"media-left\">\n                                                <img width=\"32\" :src=\"`https://image.tmdb.org/t/p/w500/${props.option.poster_path}`\">\n                                            </div>\n                                            <div class=\"media-content\">\n                                                {{ props.option.title }}\n                                                <br>\n                                                <small>\n                                                    Released at {{ props.option.release_date }},\n                                                    rated <b>{{ props.option.vote_average }}</b>\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </template>\n                                </b-autocomplete>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </b-collapse>\n            <div class=\"field is-horizontal\">\n                <p class=\"search-horizontal-guide\">Show </p>\n                <b-select v-model=\"perPage\">\n                    <option\n                            v-for=\"pp in perPageList\"\n                            :value=\"pp\" :key=\"pp\">\n                        {{ pp }}\n                    </option>\n                </b-select>\n                <p class=\"search-horizontal-guide\">records Sort by </p>\n                <b-select v-model=\"sortKey\">\n                    <option\n                            v-for=\"ss in sortList\"\n                            :value=\"ss\" :key=\"ss\">\n                        {{ ss }}\n                    </option>\n                </b-select>\n                <b-button type=\"is-primary\"\n                          icon-left=\"magnify\" class=\"search-horizontal-submit\" expanded>\n                    Search\n                </b-button>\n                <b-button type=\"is-default\"\n                          icon-left=\"cancel\">\n                    Clear\n                </b-button>\n            </div>\n        </section>\n    </div>\n</template>\n<script>\n\n    import debounce from 'lodash/debounce'\n\n    export default {\n        data() {\n            return {\n                data: [],\n                selected: null,\n                isFetching: false,\n                sortKey: 'ASSOCIATION',\n                sortList: [\n                    'ASSOCIATION', 'OTHER1', 'OTHER2'\n                ],\n                perPage: 10,\n                perPageList: [\n                    10, 20, 30\n                ]\n            }\n        },\n        methods: {\n            // You have to install and import debounce to use it,\n            // it's not mandatory though.\n            getAsyncData: debounce(function (name) {\n                if (!name.length) {\n                    this.data = []\n                    return\n                }\n                this.isFetching = true\n                this.$http.get(`https://api.themoviedb.org/3/search/movie?api_key=bb6f51bef07465653c3e553d6ab161a8&query=${name}`)\n                    .then(({ data }) => {\n                    this.data = []\n                data.results.forEach((item) => this.data.push(item))\n            })\n                .catch((error) => {\n                    this.data = []\n                throw error\n            })\n                .finally(() => {\n                    this.isFetching = false\n            })\n            }, 500)\n\n        }\n    }\n</script>"],"sourceRoot":"src/components"}]}