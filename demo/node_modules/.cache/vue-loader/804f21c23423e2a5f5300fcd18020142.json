{"remainingRequest":"/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/src/components/form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/src/components/form.vue","mtime":1584957023812},{"path":"/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/node_modules/cache-loader/dist/cjs.js","mtime":1584957116395},{"path":"/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/node_modules/babel-loader/lib/index.js","mtime":1584957116386},{"path":"/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/node_modules/cache-loader/dist/cjs.js","mtime":1584957116395},{"path":"/Users/oec/Dropbox/workspace/github/DDBJSearch/demo/node_modules/vue-loader/lib/index.js","mtime":1584957143359}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgZGVib3VuY2UgZnJvbSAnbG9kYXNoL2RlYm91bmNlJwoKZXhwb3J0IGRlZmF1bHQgewogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBkYXRhOiBbXSwKICAgICAgICAgICAgc2VsZWN0ZWQ6IG51bGwsCiAgICAgICAgICAgIGlzRmV0Y2hpbmc6IGZhbHNlLAogICAgICAgICAgICBzb3J0S2V5OiAnQVNTT0NJQVRJT04nLAogICAgICAgICAgICBzb3J0TGlzdDogWwogICAgICAgICAgICAgICAgJ0FTU09DSUFUSU9OJywgJ09USEVSMScsICdPVEhFUjInCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIHBlclBhZ2U6IDEwLAogICAgICAgICAgICBwZXJQYWdlTGlzdDogWwogICAgICAgICAgICAgICAgMTAsIDIwLCAzMAogICAgICAgICAgICBdCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICAvLyBZb3UgaGF2ZSB0byBpbnN0YWxsIGFuZCBpbXBvcnQgZGVib3VuY2UgdG8gdXNlIGl0LAogICAgICAgIC8vIGl0J3Mgbm90IG1hbmRhdG9yeSB0aG91Z2guCiAgICAgICAgZ2V0QXN5bmNEYXRhOiBkZWJvdW5jZShmdW5jdGlvbiAobmFtZSkgewogICAgICAgICAgICBpZiAoIW5hbWUubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICB0aGlzLmRhdGEgPSBbXQogICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5pc0ZldGNoaW5nID0gdHJ1ZQogICAgICAgICAgICB0aGlzLiRodHRwLmdldChgaHR0cHM6Ly9hcGkudGhlbW92aWVkYi5vcmcvMy9zZWFyY2gvbW92aWU/YXBpX2tleT1iYjZmNTFiZWYwNzQ2NTY1M2MzZTU1M2Q2YWIxNjFhOCZxdWVyeT0ke25hbWV9YCkKICAgICAgICAgICAgICAgIC50aGVuKCh7IGRhdGEgfSkgPT4gewogICAgICAgICAgICAgICAgdGhpcy5kYXRhID0gW10KICAgICAgICAgICAgZGF0YS5yZXN1bHRzLmZvckVhY2goKGl0ZW0pID0+IHRoaXMuZGF0YS5wdXNoKGl0ZW0pKQogICAgICAgIH0pCiAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuZGF0YSA9IFtdCiAgICAgICAgICAgIHRocm93IGVycm9yCiAgICAgICAgfSkKICAgICAgICAgICAgLmZpbmFsbHkoKCkgPT4gewogICAgICAgICAgICAgICAgdGhpcy5pc0ZldGNoaW5nID0gZmFsc2UKICAgICAgICB9KQogICAgICAgIH0sIDUwMCkKCiAgICB9Cn0K"},{"version":3,"sources":["form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8KA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"form.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"search-section\">\n        <section id=\"search\" class=\"content\">\n            <div class=\"field is-horizontal\">\n                <div class=\"field-label is-normal\">\n                    <label class=\"label\">Taxonomy ID</label>\n                </div>\n                <div class=\"field-body\">\n                    <div class=\"field\">\n                        <b-autocomplete\n                                :data=\"data\"\n                                placeholder=\"e.g. Fight Club\"\n                                field=\"title\"\n                                :loading=\"isFetching\"\n                                @typing=\"getAsyncData\"\n                                @select=\"option => selected = option\">\n\n                            <template slot-scope=\"props\">\n                                <div class=\"media\">\n                                    <div class=\"media-left\">\n                                        <img width=\"32\" :src=\"`https://image.tmdb.org/t/p/w500/${props.option.poster_path}`\">\n                                    </div>\n                                    <div class=\"media-content\">\n                                        {{ props.option.title }}\n                                        <br>\n                                        <small>\n                                            Released at {{ props.option.release_date }},\n                                            rated <b>{{ props.option.vote_average }}</b>\n                                        </small>\n                                    </div>\n                                </div>\n                            </template>\n                        </b-autocomplete>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field is-horizontal\">\n                <div class=\"field-label is-normal\">\n                    <label class=\"label\">Keyword</label>\n                </div>\n                <div class=\"field-body\">\n                    <div class=\"field\">\n                        <b-autocomplete\n                                :data=\"data\"\n                                placeholder=\"e.g. Fight Club\"\n                                field=\"title\"\n                                :loading=\"isFetching\"\n                                @typing=\"getAsyncData\"\n                                @select=\"option => selected = option\">\n\n                            <template slot-scope=\"props\">\n                                <div class=\"media\">\n                                    <div class=\"media-left\">\n                                        <img width=\"32\" :src=\"`https://image.tmdb.org/t/p/w500/${props.option.poster_path}`\">\n                                    </div>\n                                    <div class=\"media-content\">\n                                        {{ props.option.title }}\n                                        <br>\n                                        <small>\n                                            Released at {{ props.option.release_date }},\n                                            rated <b>{{ props.option.vote_average }}</b>\n                                        </small>\n                                    </div>\n                                </div>\n                            </template>\n                        </b-autocomplete>\n                    </div>\n                </div>\n            </div>\n            <b-collapse :open=\"false\" position=\"is-bottom\" aria-id=\"contentIdForA11y1\" class=\"search-collapse\">\n                <a slot=\"trigger\" slot-scope=\"props\" aria-controls=\"contentIdForA11y1\" class=\"search-collapse-trigger\">\n                    <b-icon :icon=\"!props.open ? 'menu-down' : 'menu-up'\"></b-icon>\n                    {{ !props.open ? 'All settings' : 'Fewer settings' }}\n                </a>\n                <div>\n                    <div class=\"field is-horizontal\">\n                        <div class=\"field-label is-normal\">\n                            <label class=\"label\">More Settings</label>\n                        </div>\n                        <div class=\"field-body\">\n                            <div class=\"field\">\n                                <b-autocomplete\n                                        :data=\"data\"\n                                        placeholder=\"e.g. Fight Club\"\n                                        field=\"title\"\n                                        :loading=\"isFetching\"\n                                        @typing=\"getAsyncData\"\n                                        @select=\"option => selected = option\">\n\n                                    <template slot-scope=\"props\">\n                                        <div class=\"media\">\n                                            <div class=\"media-left\">\n                                                <img width=\"32\" :src=\"`https://image.tmdb.org/t/p/w500/${props.option.poster_path}`\">\n                                            </div>\n                                            <div class=\"media-content\">\n                                                {{ props.option.title }}\n                                                <br>\n                                                <small>\n                                                    Released at {{ props.option.release_date }},\n                                                    rated <b>{{ props.option.vote_average }}</b>\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </template>\n                                </b-autocomplete>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"field is-horizontal\">\n                        <div class=\"field-label is-normal\">\n                            <label class=\"label\">More Settings</label>\n                        </div>\n                        <div class=\"field-body\">\n                            <div class=\"field\">\n                                <b-autocomplete\n                                        :data=\"data\"\n                                        placeholder=\"e.g. Fight Club\"\n                                        field=\"title\"\n                                        :loading=\"isFetching\"\n                                        @typing=\"getAsyncData\"\n                                        @select=\"option => selected = option\">\n\n                                    <template slot-scope=\"props\">\n                                        <div class=\"media\">\n                                            <div class=\"media-left\">\n                                                <img width=\"32\" :src=\"`https://image.tmdb.org/t/p/w500/${props.option.poster_path}`\">\n                                            </div>\n                                            <div class=\"media-content\">\n                                                {{ props.option.title }}\n                                                <br>\n                                                <small>\n                                                    Released at {{ props.option.release_date }},\n                                                    rated <b>{{ props.option.vote_average }}</b>\n                                                </small>\n                                            </div>\n                                        </div>\n                                    </template>\n                                </b-autocomplete>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </b-collapse>\n            <div class=\"field is-horizontal\">\n                <p class=\"search-horizontal-guide\">Show </p>\n                <b-select v-model=\"perPage\">\n                    <option\n                            v-for=\"pp in perPageList\"\n                            :value=\"pp\" :key=\"pp\">\n                        {{ pp }}\n                    </option>\n                </b-select>\n                <p class=\"search-horizontal-guide\">records Sort by </p>\n                <b-select v-model=\"sortKey\">\n                    <option\n                            v-for=\"ss in sortList\"\n                            :value=\"ss\" :key=\"ss\">\n                        {{ ss }}\n                    </option>\n                </b-select>\n                <b-button type=\"is-primary\"\n                          icon-left=\"magnify\" class=\"search-horizontal-submit\" expanded>\n                    Search\n                </b-button>\n                <b-button type=\"is-default\"\n                          icon-left=\"cancel\">\n                    Clear\n                </b-button>\n            </div>\n        </section>\n    </div>\n</template>\n<script>\n\n    import debounce from 'lodash/debounce'\n\n    export default {\n        data() {\n            return {\n                data: [],\n                selected: null,\n                isFetching: false,\n                sortKey: 'ASSOCIATION',\n                sortList: [\n                    'ASSOCIATION', 'OTHER1', 'OTHER2'\n                ],\n                perPage: 10,\n                perPageList: [\n                    10, 20, 30\n                ]\n            }\n        },\n        methods: {\n            // You have to install and import debounce to use it,\n            // it's not mandatory though.\n            getAsyncData: debounce(function (name) {\n                if (!name.length) {\n                    this.data = []\n                    return\n                }\n                this.isFetching = true\n                this.$http.get(`https://api.themoviedb.org/3/search/movie?api_key=bb6f51bef07465653c3e553d6ab161a8&query=${name}`)\n                    .then(({ data }) => {\n                    this.data = []\n                data.results.forEach((item) => this.data.push(item))\n            })\n                .catch((error) => {\n                    this.data = []\n                throw error\n            })\n                .finally(() => {\n                    this.isFetching = false\n            })\n            }, 500)\n\n        }\n    }\n</script>"]}]}